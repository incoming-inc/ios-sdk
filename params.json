{"name":"Incoming PVN iOS SDK","tagline":"Incoming Push Notification SDK for iOS","body":"The Incoming Push Video SDK can be used in a [new project](#new-project) by cloning the simple template application,  or can be [added to an existing application](#add-to-existing-project) by dropping the SDK distribution folder into your project, and adding a small amount of code.\r\n\r\n# New Project\r\n\r\n## Clone the Template Application\r\n\r\nClone the iOS template application at https://github.com/incoming-inc/ios-template-app.\r\n\r\nThe Push Video template application PVNTemplate.xcodeproj, it can be opened width Xcode 6.\r\n\r\n## Import the iOS SDK zip\r\n\r\nThe PVN SDK distribution zip can be downloaded from your project, in the Incoming control panel. \r\nThe distribution zip file contains a directory named incoming-ios-sdk, which itself contains:\r\n* the Incoming SDK static library\r\n* header files \r\n* resources that are required by a host application.\r\n\r\nDrag and drop the incoming-ios-sdk onto your XCode project. Tick \"Copy items if needed\". \r\n\r\n## Add the Incoming SDK Configuration File\r\n\r\nThe SDK relies on a configuration file named \"incoming-ios-sdk.plist\" which must be in you app main's target \"Copy Bundle Resources\" Build Phase. \r\n\r\nIf you downloaded the SDK distribution zip file from your project in the Incoming Push Video control panel, the archive may contains this file. In this case, go to the next step. To create the file, right click on the incoming­-ios-­sdk folder in the xcode explorer, and choose “New File” / “Resource” / “Property List”, name it incoming-ios-sdk.\r\n\r\n​This file must contains at minimum the following keys\r\n* api_endpoint: the Incoming API endpoint to connect to\r\n* project_key: your Incoming PVN project key\r\nYou will find both these values in the control panel, by going to the “App” page, in the top­left section titled “Download the push video SDK for iOS”.\r\n\r\n# Adding the Push Video Notification to an Existing Project\r\n\r\nAdding the PVN SDK to an existing project consist of the following steps: \r\n* Drop SDK distribution folder into your project\r\n* Add / edit the incoming-ios-sdk.plist configuration file. Your project key and API endpoint should be entered in this file. \r\n* Add framework dependencies to your project Linked framework list \r\n* Add a few lines of code to your application delegate. \r\n\r\n\r\n# API Documentation\r\n\r\n[PVN SDK API Documentation](apidocs/index.html)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}